@model Weavy.Web.Models.VersionsModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    Title = Model.Content.Name ?? "Untitled";
    Back = Model.Content.Url();
    var edit = Model.Content.HasPermission(Permission.Edit);
}

<table class="table table-hover table-content">
    <thead>
        <tr>
            <th class="table-icon"></th>
            <th>Versions</th>
            <th>Modified</th>
            <th>Type</th>
            <th>Size</th>
            <th class="table-icon"></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var ver in Model.Versions.AsSmartEnumerable()) {
            var num = Model.Versions.Count() - ver.Index;
            var item = ver.Value;
            var href = item.IsCurrent() ? item.Url() : Url.Action<ContentController>(c => c.GetVersion(item.Id, item.Version));

            <tr data-href="@href">
                <td class="table-icon">@Svg.Icon(item)</td>
                <td class="d-flex"><a href="@href" class="text-truncate">@num. @item.GetTitle()</a> @if (item.IsCurrent()) {<span class="badge badge-primary align-self-center ml-1">current</span>}</td>
                <td>@Html.Time(item.ModifiedAt, format: "g")</td>
                <td>@item.GetKind()</td>
                <td>--</td>
                <td class="table-icon">
                    @if (edit && !item.IsCurrent()) {
                        <div class="dropdown">
                            <button type="button" class="btn btn-icon dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-label="Toggle Dropdown">
                                @Svg.Icon("dots-vertical")
                            </button>
                            <div class="dropdown-menu dropdown-menu-right">
                                <form action="@(Url.Action<ContentController>(c => c.Revert(item.Id, item.Version)))" method="post">
                                    @Html.HttpMethodOverride(HttpVerbs.Put)
                                    <button type="submit" class="dropdown-item">@Svg.Icon("undo") Revert</button>
                                </form>
                                <form action="@(Url.Action<ContentController>(c => c.DeleteVersion(item.Id, item.Version)))" method="post">
                                    @Html.HttpMethodOverride(HttpVerbs.Delete)
                                    <button type="submit" class="dropdown-item">@Svg.Icon("close") Remove</button>
                                </form>
                            </div>
                        </div>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

